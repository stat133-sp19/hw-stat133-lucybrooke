boxplot(salary2 ~ position, data = nba,
ylab = "Salary(in millions of $)", xlab = "Position")
boxplot(points ~ position, data = nba,
ylab = "Salary(in millions of $)", xlab = "Position")
boxplot(points ~ position, data = nba,
ylab = "Points", xlab = "Position")
pos_colors = c('C' = "#66c2a5", 'PF' = "#fc8d62", 'PG' = "#8da0cb", 'SG' "#e78ac3", 'SG' "#a6d854")
pos_colors = c('C' = "#66c2a5", 'PF' = "#fc8d62", 'PG' = "#8da0cb", 'SG'= "#e78ac3", 'SG' = "#a6d854")
unname(pos_colors)
pos_colors[age2]
unname(pos_colors[age2])
head(unname(pos_colors[age2]))
plot(salary ~ points, data = nba, log = "xy", main = "", xlab = "Points (log scale)", ylab = "Salary (log $)",col = pos_colors, pch = 19, cex = 0.6)
palette2 <- c("#66c2a5", "#fc8d62", "#8da0cb", "#e78ac3", "#a6d854")
pos_colors = c('C' = "#66c2a5", 'PF' = "#fc8d62", 'PG' = "#8da0cb", 'SG'= "#e78ac3", 'SG' = "#a6d854")
head(unname(pos_colors[age2]))
plot(salary ~ points, data = nba, log = "xy", main = "", xlab = "Points (log scale)", ylab = "Salary (log $)",col = pos_colors, pch = 19, cex = 0.6)
legend("bottomright", fill = palette2 , legend = levels(age2), title = "Age Groups", cex = 0.8)
plot(salary ~ points, data = nba, log = "xy", main = "", xlab = "Points (log scale)", ylab = "Salary (log $)",col = pos_colors, pch = 19, cex = 0.6)
plot(salary ~ points, data = nba, log = "xy", main = "", xlab = "Points", ylab = "Salary",col = pos_colors, pch = 19, cex = 0.6)
plot(salary ~ points, data = nba, main = "", xlab = "Points", ylab = "Salary",col = pos_colors, pch = 19, cex = 0.6)
plot(salary2 ~ points, data = nba, main = "", xlab = "Points", ylab = "Salary",col = pos_colors, pch = 19, cex = 0.6)
plot(salary2 ~ points, data = nba, log = xy, main = "", xlab = "Points", ylab = "Salary",col = pos_colors, pch = 19, cex = 0.6)
plot(salary2 ~ points, data = nba, log = 'xy', main = "", xlab = "Points", ylab = "Salary",col = pos_colors, pch = 19, cex = 0.6)
legend("bottomright", fill = palette1, legend = levels(age2),
title = "Age Groups", cex = 0.8)
age2
plot.new
legend("bottomright", fill = palette1, legend = levels(age2),
title = "Age Groups", cex = 0.8)
plot.new()
legend("bottomright", fill = palette1, legend = levels(age2),
title = "Age Groups", cex = 0.8)
plot.new()
plot.new()
plot(salary ~ points, data = nba, log = "xy", main = "", xlab = "Points (log scale)", ylab = "Salary (log $)",col = age_colors, pch = 19, cex = 0.6)
legend("bottomright", fill = palette1, legend = levels(age2),
title = "Age Groups", cex = 0.8)
levels(nba$position)
legend("bottomright", fill = palette2 , legend = levels(nba$position), title = "Position", cex = 0.8)
plot(salary ~ points, data = nba, log = "xy", main = "", xlab = "Points (log scale)", ylab = "Salary (log $)",col = pos_colors, pch = 19, cex = 0.6)
legend("bottomright", fill = palette2 , legend = levels(nba$position), title = "Position", cex = 0.8)
plot(salary ~ points, data = nba, log = "xy", main = "", xlab = "Points (log scale)", ylab = "Salary (log $)",col = pos_colors, pch = 19, cex = 0.6)
read.table(datafile, nrows = 10)
# This command does not work because the character that separates the data needs to be specified as sep = ","
# example
read.table(datafile, nrows = 10, sep = ",")
# This command does not work because the character that separates the data needs to be specified as sep = ","
# example
head(read.table(datafile, nrows = 10, sep = ","))
nba <- mutate(nba, salary2)
hist(nba$salary2, breaks = 30, xlab = "NBA Salary 2 (in millions of dollars)")
library(dplyr)
library(dplyr)
salary2 <- (nba$salary)/1000000
head(salary2)
nba <- mutate(nba, salary2)
hist(nba$salary2, breaks = 30, xlab = "NBA Salary 2 (in millions of dollars)")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
dat <- read.csv('nba2018-players.csv', stringsAsFactors = FALSE)
dat <- read_csv('nba2018-players.csv')
library(readr )
library(readr)
dat <- read.csv('nba2018-players.csv')
dat <- read.csv('nba2018-players.csv', stringsAsFactors = FALSE)
install.packages(readr)
install.packages("readr")
library(readr)
dat <- read_csv('nba2018-players.csv')
download.file('https://raw.githubusercontent.com/ucb-stat133/stat133-hws/master/data/nba2018-players.csv', 'nba2018-players.csv')
dat <- read_csv('nba2018-players.csv')
dat <- read.csv('nba2018-players.csv', stringsAsFactors = FALSE)
head(dat)
slice(dat, 1:5)
slice(dat, seq(10, 50, by = 10))
slice(dat, (nrow(dat)-5):nrow(dat))
slice(dat, (nrow(dat)-4):nrow(dat))
slice(dat, 1:5)
slice(dat, (nrow(dat)-4):nrow(dat))
dat
head(dat)
filter(dat, height < 70)
filter(dat, 'GSW')
filter(dat, GSW)
filter(dat, team == 'GSW')
filter(dat, team == 'GSW' & position == 'C')
filter(dat, team == 'LAL')
select(filter(dat, team == 'LAL'), player)
select(filter(dat, team == "GSW" & position == "PG"), player, salary)
filter(dat, experience > 10 & salary2 <= 10)
tens <- filter(dat, experience > 10 & salary2 <= 10)
tens <- filter(dat, experience > 10 & salary2 <= 10)x
tens <- filter(dat, experience > 10 & salary2 <= 10)
tens <- filter(dat, experience > 10 & salary2 <= 10)
filter(dat, experience > 10 & salary2 <= 10)
select(filter(dat, experience > 10 & salary2 <= 10), player, age, team)
slice(dat, 1:5)
slice(dat, 1:5)
ffr = slice(dat, 1:5)
dat
slice(select(filter(dat, age == 20), name, height, weight), 1:5)
(select(filter(dat, age == 20), name, height, weight)
select(filter(dat, age == 20), name, height, weight)
select(filter(dat, age == 20), name, height, weight)
select(filter(dat, experience > 10 & salary2 <= 10), player, age, team)
filter(dat, age == 20)
rookie <- filter(dat, age == 20)
select(filter(dat, age == 20), player, team, height, weight)
slice((select(filter(dat, age == 20), player, team, height, weight)), 1:5)
gsw <- filter(dat, team == 'GSW')
gsw <- select(gsw, player, height, weight)
gsw <- slice(gsw, c(4, 8, 10, 14, 15))
gsw
mutate(gsw, height*weight)
mutate(gsw, product = height*weight)
gws3 <- mutate(gsw, log_height = log(height), log_weight = log(weight))
gsw3
gsw3 <- mutate(gsw, log_height = log(height), log_weight = log(weight))
gsw3
filter(gsw, height < 71)
filter(gsw, height < 71)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(readr)
dat <- read.csv('nba2018-players.csv', stringsAsFactors = FALSE)
filter(gsw, height < 71)
filter(gsw, height < 71)
filter(dat, height < 71)
arrange(filter(dat, height < 71))
arrange(dat, desc(salary))
slice(arrange(dat, desc(salary)), 1:5)
select(slice(arrange(dat, desc(salary)), 1:5), player, team, salary)
arrange(dat, desc(points3))
select(slice(arrange(dat, desc(points3)), 1:10), player, team, points3)
select(dat, team == "GSW")
select(dat, team == 'GSW')
filter(dat, team == 'GSW')
gsw
gsw_mpg <- filter(dat, team == 'GSW')
head(dat)
gsw_mpg <- mutate(gsw_mpg, min_per_game = minutes/games)
gsw_mpg <- select(gsw_mpg, player, experience, min_per_game)
gsw_mpg <- arrange(gsw_mpg, desc(min_per_game))
gsw_mpg
typeof(gsw_mpg)
gsw_mpg
data.frame(gsw_mpg)
gsw_mpg
group_by(dat, team)
group_by(dat, position)
summarise(
group_by(dat, position),
avg_salary = mean(salary)
)
slice((select(filter(dat, age == 20 & experience == 0), player, team, height, weight)), 1:5)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(readr)
dat <- read.csv('nba2018-players.csv', stringsAsFactors = FALSE)
library(dplyr)
library(ggplot2)
library(readr)
dat <- read.csv('nba2018-players.csv', stringsAsFactors = FALSE)
head(dat)
slice(dat, 1:5)
slice(dat, seq(10, 50, by = 10))
slice(dat, (nrow(dat)-4):nrow(dat))
summarise(height)
summarise(dat, height)
group_by(dat, height),
summarise(
group_by(dat, height),
max_height = max(height))
summarise(dat, max_height = max(height))
summarise(dat, std = sd(points3))
summarise(
group_by(dat, team),
threepm = median(points3)
)
arrange(
summarise(
group_by(dat, team),
avgtrip = mean(points3)),
avgtrip)
slice(
arrange(
summarise(
group_by(dat, team),
avgtrip = mean(points3)),
avgtrip),
5)
slice(
arrange(
summarise(
group_by(dat, team),
avgtrip = mean(points3)),
avgtrip),
5)
slice(
arrange(
summarise(
group_by(dat, team),
avgtrip = mean(points3)),
avgtrip),
1:5)
summarise(
group_by(dat, position),
mean_age = mean(age)
sd_age = sd(age)
summarise(
group_by(dat, position),
mean_age = mean(age),
sd_age = sd(age)
)
PF_m_sd <- summarise(
group_by(dat, position),
mean_age = mean(age),
sd_age = sd(age)
)
filter(PF_m_sd, position = "PF" & experience >= 5 & experience <= 10)
filter(PF_m_sd, position == "PF" & experience >= 5 & experience <= 10)
filter(PF_m_sd, position == "PF" & experience >= 5)
filter(PF_m_sd, position == "PF")
PF_m_sd <- summarise(
group_by(dat, position, experience),
mean_age = mean(age),
sd_age = sd(age)
)
filter(PF_m_sd, position == "PF" & experience >= 5 & experience <= 10)
filter(dat, position == "PF" & experience >= 5 & experience <= 10)
PF_filt = filter(dat, position == "PF" & experience >= 5 & experience <= 10)
summarise(
group_by(dat, position, experience),
mean_age = mean(age),
sd_age = sd(age)
)
summarise(
mean_age = mean(age),
sd_age = sd(age)
)
summarise(
PF_filt,
mean_age = mean(age),
sd_age = sd(age)
)
# scatterplot (option 1)
ggplot(data = dat) +
geom_point(aes(x = points, y = salary))
# scatterplot (option 2)
ggplot(data = dat, aes(x = points, y = salary)) +
geom_point()
# colored scatterplot
ggplot(data = dat, aes(x = points, y = salary)) +
geom_point(aes(color = position))
# sized and colored scatterplot
ggplot(data = dat, aes(x = points, y = salary)) +
geom_point(aes(color = position, size = points3))
# sized and colored scatterplot
ggplot(data = dat, aes(x = points, y = salary)) +
geom_point(aes(color = position, size = points3), alpha = 0.7)
ggplot(data = gsw, aes(x = height, y = weight)) + geom_point()
gsw
gsw <- filter(dat, team == 'GSW')
filter(dat, team == 'GSW')
filter(dat, team == 'GSW' & position == 'C')
select(filter(dat, team == 'LAL'), player)
select(filter(dat, team == "GSW" & position == "PG"), player, salary)
select(filter(dat, experience > 10 & salary2 <= 10), player, age, team)
gsw <- filter(dat, team == 'GSW')
gsw1 <- select(gsw, player, height, weight)
gsw1 <- slice(gsw1, c(4, 8, 10, 14, 15))
gsw1
mutate(gsw1, product = height*weight)
ggplot(data = gsw, aes(x = height, y = weight)) + geom_point()
gsw
ggplot(data = gsw, aes(x = height, y = weight)) + geom_point()
ggplot(data = gsw, aes(x = height, y = weight)) + geom_point() + geom_text(aes(filter(gsw, player))
ggplot(data = gsw, aes(x = height, y = weight)) + geom_point() + geom_text(aes(filter(gsw, player)))
ggplot(data = gsw, aes(x = height, y = weight)) + geom_point() + geom_text(aes(gsw, player))
ggplot(data = gsw, aes(x = height, y = weight)) + geom_point() + geom_text(aes(player))
ggplot(data = gsw, aes(x = height, y = weight)) + geom_point() + geom_text(aes(gsw$player))
gsw$player
ggplot(data = gsw, aes(x = height, y = weight)) + geom_point() + geom_text(aes(data = gsw$player))
ggplot(data = gsw, aes(x = height, y = weight)) + geom_point() + geom_text(aes(label = gsw$player))
gsw <- filter(dat, team == 'GSW')
gsw <- select(gsw, player, height, weight)
gsw <- slice(gsw, c(4, 8, 10, 14, 15))
gsw
mutate(gsw, product = height*weight)
gsw3 <- mutate(gsw, log_height = log(height), log_weight = log(weight))
gsw3
ggplot(data = gsw, aes(x = height, y = weight)) + geom_point()
ggplot(data = gsw, aes(x = height, y = weight)) + geom_point() + geom_text(aes(label = gsw$player))
gsw_all <- filter(dat, team == "GSW")
ggplot(data = gsw_all, aes(x = height, y = weight)) + geom_point() + geom_text(aes(label = gsw_all$player))
ggplot(data = dat, aes(x = salary))
ggplot(data = dat, aes(x = salary, y = NULL))
ggplot(data = dat, aes(x = NULL, y = salary))
ggplot(data = dat, aes(salary)) + geom_density()
ggplot(data = dat, aes(points2)) + geom_histogram(bins = 50)
ggplot(data = dat, aes(position)) + geom_bar()
ggplot(data = dat, aes(x = experience, y = salary)) + geom_smooth()
```{r C exp/sal scatterplot loess}
ggplot(data = dat, aes(x = experience, y = salary)) + geom_smooth()
ggplot(data = dat, aes(x = experience, y = salary)) + geom_smooth(lm)
ggplot(data = dat, aes(x = experience, y = salary)) + geom_smooth(method = lm)
ggplot(data = dat, aes(x = experience, y = salary)) + geom_smooth(method = loess())
ggplot(data = dat, aes(x = experience, y = salary)) + geom_smooth(method = loess
ggplot(data = dat, aes(x = experience, y = salary)) + geom_smooth(method = loess)
ggplot(data = dat, aes(x = experience, y = salary)) + geom_smooth(method = loess)
# scatterplot by position
ggplot(data = dat, aes(x = points, y = salary)) +
geom_point() +
facet_wrap(~ position)
# scatterplot by position
ggplot(data = dat, aes(x = points, y = salary)) +
geom_point(aes(color = position), alpha = 0.7) +
facet_grid(~ position) +
geom_smooth(method = loess)
# scatterplot by position
ggplot(data = dat, aes(x = points, y = salary)) +
geom_point(aes(color = position), alpha = 0.7) +
facet_grid(position ~ .) +
geom_smooth(method = loess)
library(dplyr)
library(ggplot2)
library(readr)
dat <- read.csv('nba2018-players.csv', stringsAsFactors = FALSE)
head(dat)
download.file('https://raw.githubusercontent.com/ucb-stat133/stat133-hws/master/data/nba2018-players.csv', 'nba2018-players.csv')
dat <- read.csv('nba2018-players.csv', stringsAsFactors = FALSE)
read.csv('nba2018-players.csv', stringsAsFactors = FALSE)
dat <- read.csv('nba2018-players.csv', stringsAsFactors = FALSE)
head(dat)
dat <- read.csv('nba2018-players.csv', stringsAsFactors = FALSE)
head(dat)
select(filter(dat, experience > 10 & salary2 <= 10), player, age, team)
dat$salary2
salary2 <- (dat$salary)/1000000
head(salary2)
dat <- mutate(dat, salary2)
select(filter(dat, experience > 10 & salary2 <= 10), player, age, team)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
nba %>%
group_by(position, salary, experience) %>%
filter(experience == 7) %>%
slice(1:10)
nba %>%
group_by(position, salary, experience) %>%
filter(experience == 7) %>%
select(position, salary, experience) %>%
slice(1:10)
nba %>%
group_by(position, salary, experience) %>%
filter(experience == 7) %>%
select(position, salary, experience, name) %>%
slice(1:10)
nba %>%
group_by(position, salary, experience) %>%
filter(experience == 7) %>%
select(position, salary, experience, player) %>%
slice(1:10)
knitr::opts_chunk$set(echo = TRUE)
head(mtcars)
getwd()
select(mtcars, mpg, disp, hp)
library('dplyr')
select(mtcars, mpg, disp, hp)
sink()
sink(file = 'stat133-lab05/exports/dataset.csv') select(mtcars, mpg, disp, hp)
sink(file = 'stat133-lab05/exports/dataset.csv')
sink(file = '/Users/lucy/stat133-lab05/exports/dataset.csv')
select(mtcars, mpg, disp, hp)
sink()
head(dataset.csv)
head('dataset.csv')
sink(file = '/Users/lucy/stat133-lab05/exports/mtcars-structure.txt')
str(mtcars)
sink()
sink(file = '/Users/lucy/stat133-lab05/exports/summary-mtcars.txt')
summary(mtcars)
sink()
head(mtcars$wt)
mtcars$wt
select(mtcars, wt)
png(filename = 'Users/lucy/stat133-lab05/exports/scatterplot-mpg-disp.png')
plot(mtcars$mpg, mtcars$wt, pch = 20,
xlab = 'Miles per Gallon', ylab = 'Weight')
dev.off()
png(filename = 'Users/lucy/stat133-lab05/exports/scatterplot-mpg-wt.png')
plot(mtcars$mpg, mtcars$wt, pch = 20,
xlab = 'Miles per Gallon', ylab = 'Weight')
dev.off()
plot(mtcars$mpg, mtcars$wt, pch = 20,
xlab = 'Miles per Gallon', ylab = 'Weight')
dev.off()
dev.off()
png.off()
dev.off()
png(filename = 'Users/lucy/stat133-lab05/exports/scatterplot-mpg-wt.png')
plot(mtcars$mpg, mtcars$wt, pch = 20,
xlab = 'Miles per Gallon', ylab = 'Weight')
graphics.off()
png(filename = 'Users/lucy/stat133-lab05/exports/scatterplot-mpg-wt.png', res = 80)
plot(mtcars$mpg, mtcars$wt, pch = 20,
xlab = 'Miles per Gallon', ylab = 'Weight')
graphics.off()
png(filename = 'Users/lucy/stat133-lab05/exports/scatterplot-mpg-wt.png', res = 80)
plot(mtcars$mpg, mtcars$wt, pch = 20,
xlab = 'Miles per Gallon', ylab = 'Weight')
png(filename = 'Users/lucy/stat133-lab05/exports/scatterplot-mpg-wt.png', res = 90)
plot(mtcars$mpg, mtcars$wt, pch = 20,
xlab = 'Miles per Gallon', ylab = 'Weight')
graphics.off()
png(filename = 'Users/lucy/stat133-lab05/exports/scatterplot-hp-wt.png', res = 90)
plot(mtcars$mpg, mtcars$wt, pch = 20,
xlab = 'Miles per Gallon', ylab = 'Weight')
graphics.off()
dev.off()
getOption(device)
getOption("device")
png(filename = "Users/lucy/stat133-lab05/exports/scatterplot-mpg-wt.png")
plot(mtcars$mpg, mtcars$wt, pch = 20,
xlab = 'Miles per Gallon', ylab = 'Weight')
dev.off()
dev.new()
png(filename = "Users/lucy/stat133-lab05/exports/scatterplot-mpg-wt.png")
plot(mtcars$mpg, mtcars$wt, pch = 20,
xlab = 'Miles per Gallon', ylab = 'Weight')
dev.off()
png(filename = "Users/lucy/stat133-lab05/exports/scatterplot-mpg-wt.png")
plot(mtcars$mpg, mtcars$wt, pch = 20, xlab = 'Miles per Gallon', ylab = 'Weight')
dev.off()
dev.list()
dev.prev()
png(filename = "Users/lucy/stat133-lab05/exports/scatterplot-mpg-wt.png")
plot(mtcars$mpg, mtcars$wt, pch = 20, xlab = 'Miles per Gallon', ylab = 'Weight')
dev.prev()
png(filename = "Users/lucy/stat133-lab05/exports/scatterplot-mpg-wt.png")
plot(mtcars$mpg, mtcars$wt, pch = 20, xlab = 'Miles per Gallon', ylab = 'Weight')
dev.off()
jpeg(filename = "Users/lucy/stat133-lab05/exports/histogram-mpg.jpeg", width = 600, height = 400)
hist(mtcars$mpg)
dev.off()
# saving a scatterplot in png format
png(filename = "stat133-lab05/exports/scatterplot-mpg-disp.png")
plot(mtcars$mpg, mtcars$disp, pch = 20,
xlab = 'Miles per Gallon', ylab = 'Displacement')
dev.off()
sink(file = 'stat133-lab05/exports/dataset.csv')
sink(filename = 'stat133-lab05/exports/dataset.csv')
sink(filename = 'Users/lucy/stat133-lab05/exports/dataset.csv')
library('dplyr')
sink(filename = 'Users/lucy/stat133-lab05/exports/dataset.csv')
sink(file = 'Users/lucy/stat133-lab05/exports/dataset.csv')
# saving a scatterplot in png format
png(filename = "stat133-lab05/exports/scatterplot-mpg-disp.png")
plot(mtcars$mpg, mtcars$disp, pch = 20,
xlab = 'Miles per Gallon', ylab = 'Displacement')
plot(mtcars$mpg, mtcars$disp, pch = 20,
xlab = 'Miles per Gallon', ylab = 'Displacement')
dev.off()
# saving a scatterplot in png format
png()
png(filename = "stat133-lab05/exports/scatterplot-mpg-disp.png")
plot(mtcars$mpg, mtcars$disp, pch = 20,
xlab = 'Miles per Gallon', ylab = 'Displacement')
dev.off()
getwd()
dev.off()
sink(file = '/Users/lucy/stat133-lab05/exports/dataset.csv')
select(mtcars, mpg, disp, hp)
sink()
sink(file = 'stat133-lab05/exports/mtcars-structure.txt')
sink(file = '/Users/lucy/stat133-lab05/exports/mtcars-structure.txt')
str(mtcars)
png(filename = '/Users/lucy/stat133-lab05/exports/scatterplot-hp-wt.png', res = 90)
plot(mtcars$mpg, mtcars$wt, xlab = 'Miles per Gallon', ylab = 'Weight')
dev.off()
pdf(filename = "/Users/lucy/stat133-lab05/exports/histogram-mpg.pdf", width = 7, height = 5)
pdf(file = "/Users/lucy/stat133-lab05/exports/histogram-mpg.pdf", width = 7, height = 5)
hist(mtcars$mpg)
dev.off()
library("ggplot2")
gg_mpg_disp <- ggplot(data = mtcars, aes(x = mpg, y = disp))
gg_mpg_disp
gg_mpg_disp <- ggplot(data = mtcars, aes(x = mtcars$mpg, y = mtcars$disp))
gg_mpg_disp
gg_mpg_disp <- plot(data = mtcars, aes(x = mtcars$mpg, y = mtcars$disp))
gg_mpg_disp <- ggplot(data = mtcars, aes(x = mtcars$mpg, y = mtcars$disp))
knitr::opts_chunk$set(echo = TRUE)
ggplot(data = gsw_all, aes(x = height, y = weight)) + geom_point() + geom_text(aes(label = gsw_all$player))
gg_mpg_disp <- ggplot(data = mtcars, aes(x = mtcars$mpg, y = mtcars$disp)) + geom_point()
gg_mpg_disp
gg_mpg_disp <- ggplot(data = mtcars, aes(x = mpg, y = disp)) + geom_point()
gg_mpg_disp
gg_mpg_disp <- ggplot(data = mtcars, aes(x = disp, y = mpg)) + geom_point()
gg_mpg_disp
ggsave(filename = "/Users/lucy/stat133-lab05/exports/gg_mpg_disp", width = 7 'in', height = 5 'in')
ggsave(filename = "/Users/lucy/stat133-lab05/exports/gg_mpg_disp", width = 7 in, height = 5 in)
ggsave(filename = "/Users/lucy/stat133-lab05/exports/gg_mpg_disp", width = 7 "in", height = 5 "in")
ggsave(filename = "/Users/lucy/stat133-lab05/exports/gg_mpg_disp", width = 7, height = 5, units = "in")
ggsave(filename = "/Users/lucy/stat133-lab05/exports/gg_mpg_disp", device = pdf, width = 7, height = 5, units = "in")
ggsave("/Users/lucy/stat133-lab05/exports/gg_mpg_disp", device = pdf, width = 7, height = 5, units = "in")
ggsave("/Users/lucy/stat133-lab05/exports/gg_mpg_disp.pdf", device = pdf, width = 7, height = 5, units = "in")
ggsave(filename = "/Users/lucy/stat133-lab05/exports/gg_mpg_disp.pdf", device = pdf, width = 7, height = 5, units = "in")
ggsave(filename = "/Users/lucy/stat133-lab05/exports/gg_mpg_disp.pdf", width = 7, height = 5, units = "in")
